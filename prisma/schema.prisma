generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  name           String
  email          String   @unique
  password       String
  profilePicture String?  @default("https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Default_pfp.svg/2048px-Default_pfp.svg.png")
  chatIDs        String[] @db.ObjectId

  participantChats Chat[]    @relation(name: "participantRelation", fields: [chatIDs], references: [id])
  groupAdminChats  Chat[]    @relation(name: "groupAdminRelation")
  messages         Message[] @relation(name: "senderIdRelation")

  @@map("users")
}

model Chat {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  chatName        String?  @map("chat_name")
  isGroupChat     Boolean  @default(false) @map("is_group_chat")
  groupAdminID    String?  @db.ObjectId
  participantIDs  String[] @db.ObjectId
  latestMessageId String?  @unique @db.ObjectId
  messageIDs      String[] @db.ObjectId

  participants  User[]    @relation(name: "participantRelation", fields: [participantIDs], references: [id])
  groupAdmin    User?     @relation(name: "groupAdminRelation", fields: [groupAdminID], references: [id])
  messages      Message[] @relation(name: "chatIdRelation")
  latestMessage Message?  @relation(name: "latestMessageIdRelation", fields: [latestMessageId], references: [id])

  @@map("chats")
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  senderId  String   @db.ObjectId
  chatId    String   @db.ObjectId
  message   String

  chat              Chat  @relation(name: "chatIdRelation", fields: [chatId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sender            User  @relation(name: "senderIdRelation", fields: [senderId], references: [id])
  latestMessageChat Chat? @relation(name: "latestMessageIdRelation")

  @@map("messages")
}
